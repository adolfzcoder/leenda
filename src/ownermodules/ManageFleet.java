/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ownermodules;

import auth.LoginPage;
import java.awt.HeadlessException;
import java.awt.event.MouseEvent;
import java.awt.print.PrinterException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import java.nio.file.Files;
import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStreamWriter;
import models.User;

/**
 *
 * @author timmy
 */

public class ManageFleet extends javax.swing.JFrame {

    /**
     * Creates new form CarListing
     */
    public User user;
    public ManageFleet(User user) {
        // Set Nimbus look and feel
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e) {
            e.printStackTrace();  // Handle any exceptions
        }
        this.user = user;
        this.setTitle("Manage Fleet");
        this.setVisible(true);
         initComponents();
        
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblDashboard = new javax.swing.JLabel();
        lblCarlisting = new javax.swing.JLabel();
        lblBooking = new javax.swing.JLabel();
        lblUsermanagement = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCarListing = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        lblRenterID = new javax.swing.JLabel();
        txtCarName = new javax.swing.JTextField();
        lblCarID = new javax.swing.JLabel();
        txtCarType = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtCarYear = new javax.swing.JTextField();
        lblCarmake = new javax.swing.JLabel();
        txtStatus = new javax.swing.JTextField();
        lblDailyrate = new javax.swing.JLabel();
        txtDailyRate = new javax.swing.JTextField();
        btnEditCarListing = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtVin = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtVinDel = new javax.swing.JTextField();
        btnDeleteCarListing = new javax.swing.JButton();
        btnPrintCarListing = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(237, 223, 205));

        jPanel2.setBackground(new java.awt.Color(217, 186, 164));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(133, 62, 52));
        jLabel1.setText("Leenda");

        lblDashboard.setBackground(new java.awt.Color(133, 62, 52));
        lblDashboard.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblDashboard.setForeground(new java.awt.Color(133, 62, 52));
        lblDashboard.setText("Dashboard");
        lblDashboard.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblDashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblDashboardMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblDashboardMouseExited(evt);
            }
        });

        lblCarlisting.setBackground(new java.awt.Color(133, 62, 52));
        lblCarlisting.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblCarlisting.setForeground(new java.awt.Color(133, 62, 52));
        lblCarlisting.setText("Manage Fleet");

        lblBooking.setBackground(new java.awt.Color(133, 62, 52));
        lblBooking.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblBooking.setForeground(new java.awt.Color(133, 62, 52));
        lblBooking.setText("Booking");
        lblBooking.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblBooking.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBookingMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblBookingMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblBookingMouseExited(evt);
            }
        });

        lblUsermanagement.setBackground(new java.awt.Color(133, 62, 52));
        lblUsermanagement.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblUsermanagement.setForeground(new java.awt.Color(133, 62, 52));
        lblUsermanagement.setText("User Management");
        lblUsermanagement.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblUsermanagement.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblUsermanagementMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblUsermanagementMouseExited(evt);
            }
        });

        btnLogout.setBackground(new java.awt.Color(237, 233, 205));
        btnLogout.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnLogout.setForeground(new java.awt.Color(133, 62, 52));
        btnLogout.setText("Log Out");
        btnLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLogoutMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblDashboard)
                .addGap(18, 18, 18)
                .addComponent(lblCarlisting)
                .addGap(18, 18, 18)
                .addComponent(lblBooking)
                .addGap(18, 18, 18)
                .addComponent(lblUsermanagement)
                .addGap(176, 176, 176)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblDashboard)
                        .addComponent(lblCarlisting)
                        .addComponent(lblBooking)
                        .addComponent(lblUsermanagement)
                        .addComponent(jLabel1))
                    .addComponent(btnLogout))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(217, 186, 164));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(133, 62, 52));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Manage Fleet");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblCarListing.setBackground(new java.awt.Color(217, 186, 164));
        tblCarListing.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Bmw m4", "2015", "Coupe", "boOOKED", "$600", "56743"},
                {"Audi", "2014", "Coupe", "BOOked", "$500", null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Car Name", "Car Year", "Car Type", "Status", "Daily Rate", "Vin"
            }
        ));
        jScrollPane1.setViewportView(tblCarListing);

        jPanel4.setBackground(new java.awt.Color(217, 186, 164));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblRenterID.setBackground(new java.awt.Color(133, 62, 52));
        lblRenterID.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblRenterID.setForeground(new java.awt.Color(133, 62, 52));
        lblRenterID.setText("Car Name");

        txtCarName.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N

        lblCarID.setBackground(new java.awt.Color(133, 62, 52));
        lblCarID.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblCarID.setForeground(new java.awt.Color(133, 62, 52));
        lblCarID.setText("Car Type");

        txtCarType.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N

        jLabel9.setBackground(new java.awt.Color(133, 62, 52));
        jLabel9.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(133, 62, 52));
        jLabel9.setText("Car Year");

        txtCarYear.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N

        lblCarmake.setBackground(new java.awt.Color(133, 62, 52));
        lblCarmake.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblCarmake.setForeground(new java.awt.Color(133, 62, 52));
        lblCarmake.setText("Status");

        txtStatus.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N

        lblDailyrate.setBackground(new java.awt.Color(133, 62, 52));
        lblDailyrate.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblDailyrate.setForeground(new java.awt.Color(133, 62, 52));
        lblDailyrate.setText("Daily Rate");

        txtDailyRate.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N

        btnEditCarListing.setBackground(new java.awt.Color(133, 62, 52));
        btnEditCarListing.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnEditCarListing.setForeground(new java.awt.Color(204, 204, 255));
        btnEditCarListing.setText("Edit Car Listing Information");
        btnEditCarListing.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditCarListingMouseClicked(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(133, 62, 52));
        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(133, 62, 52));
        jLabel2.setText("Vin");

        txtVin.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCarID)
                            .addComponent(txtCarType, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCarmake)
                            .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtVin, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(lblRenterID)
                                .addGap(111, 111, 111)
                                .addComponent(jLabel9)
                                .addGap(112, 112, 112)
                                .addComponent(lblDailyrate)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnEditCarListing, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(txtCarName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtCarYear, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtDailyRate, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRenterID)
                    .addComponent(jLabel9)
                    .addComponent(lblDailyrate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCarName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCarYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDailyRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCarID)
                    .addComponent(lblCarmake)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCarType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtVin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEditCarListing)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(217, 186, 164));
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel12.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setText("Delete a car with VIN");

        jLabel13.setBackground(new java.awt.Color(133, 62, 52));
        jLabel13.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(133, 62, 52));
        jLabel13.setText("VIN");

        txtVinDel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N

        btnDeleteCarListing.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnDeleteCarListing.setText("Delete Car Listing Information");
        btnDeleteCarListing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCarListingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDeleteCarListing, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
                    .addComponent(txtVinDel)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtVinDel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDeleteCarListing)
                .addContainerGap())
        );

        btnPrintCarListing.setBackground(new java.awt.Color(237, 233, 205));
        btnPrintCarListing.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnPrintCarListing.setForeground(new java.awt.Color(133, 62, 52));
        btnPrintCarListing.setText("Print Car Listing");
        btnPrintCarListing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintCarListingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPrintCarListing)
                        .addContainerGap())))
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnPrintCarListing)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteCarListingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCarListingActionPerformed
        String vin = txtVinDel.getText().trim(); // Get and trim the VIN input

        // Check if the VIN is empty
        if (vin.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a VIN.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Exit if VIN is empty
        }

        String filePath = "src/storage/cars.csv"; // Path to the CSV file
        File inputFile = new File(filePath);
        File tempFile = new File(inputFile.getAbsolutePath() + ".tmp"); // Temporary file

        BufferedReader reader = null;
        BufferedWriter writer = null;

        try {
            reader = new BufferedReader(new FileReader(inputFile));
            writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(tempFile), "UTF-8"));

            String line;
            boolean carFound = false; // Flag to check if car is found

            // Read each line from the original file
            while ((line = reader.readLine()) != null) {
            String[] cars = line.split(",");
            String existingVin = cars[5]; // Adjust index based on your CSV structure

            // Check if the current line's VIN matches the one to delete and belongs to the logged-in user
            if (existingVin.equals(vin) && cars[0].equals(user.getUserId())) { // Assuming the first column is the user ID
            if (existingVin.equals(vin)) {
                carFound = true; // Car found

                // Ask for confirmation to delete
                int confirmation = JOptionPane.showConfirmDialog(this,
                    "Are you sure you want to delete the car with VIN: " + vin + "?",
                    "Confirm Deletion",
                    JOptionPane.YES_NO_OPTION);

                if (confirmation == JOptionPane.YES_OPTION) {
                // If confirmed, skip writing this line to temp file (i.e., delete)
                continue; // Skip writing this line
                } else {
                // If not confirmed, write the line back to the temporary file and exit
                writer.write(line);
                writer.newLine();
                JOptionPane.showMessageDialog(this, "Deletion cancelled.", "Deletion Cancelled",
                    JOptionPane.INFORMATION_MESSAGE);
                return; // Exit the method
                }
            }

            // Write the line to the temp file if VIN does not match
            writer.write(line);
            writer.newLine();
            }

            // Make sure to flush and close the writer before replacing files
            writer.flush();
            writer.close(); // Close the writer first
            reader.close(); // Then close the reader

            // Check if car was found and deleted
            if (carFound) {
            // Replace the original file with the updated file
            if (!inputFile.delete() || !tempFile.renameTo(inputFile)) {
                JOptionPane.showMessageDialog(this, "Error updating file. Please try again.", "File Update Error",
                    JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Car data deleted successfully.", "Deletion Successful",
                    JOptionPane.INFORMATION_MESSAGE);
                // Optionally refresh your table or UI here
                // populateTable(tblCarListing, "src/storage/carDetails.csv");
                txtVinDel.setText("");
            }
            } else {
            JOptionPane.showMessageDialog(this, "VIN not found.", "Deletion Failed", JOptionPane.ERROR_MESSAGE);
            }

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error reading/writing to file: " + e.getMessage(), "File Error",
                JOptionPane.ERROR_MESSAGE);
        } finally {
            // Ensure resources are closed in case of an exception
            try {
            if (reader != null) {
                reader.close();
            }
            if (writer != null) {
                writer.close();
            }
            } catch (IOException e) {
            // Handle exception during resource closing
            e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnDeleteCarListingActionPerformed

    private void btnPrintCarListingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintCarListingActionPerformed
        try {
             String title = "Leenda - Car Listing";

            // Get the current date and time to display at the bottom (footer) of the page
            String footer = "Generated on: " + new SimpleDateFormat("EEEE, d MMM yyyy hh:mm:ss a").format(new Date());

            // Use the JTable's print method to print the table
            boolean complete = tblCarListing.print();
            if (complete) {
                // If printing is complete, show a success message
                JOptionPane.showMessageDialog(null, "Printing Complete", "Print", JOptionPane.INFORMATION_MESSAGE);
            } else {
                // If printing was cancelled, show a message
                JOptionPane.showMessageDialog(null, "Printing Cancelled", "Print", JOptionPane.WARNING_MESSAGE);
            }
        } catch (HeadlessException | PrinterException ex) {
            // If an error occurs during printing, show an error message
            JOptionPane.showMessageDialog(null, "Error printing table: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}
    }//GEN-LAST:event_btnPrintCarListingActionPerformed

    private void btnLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLogoutMouseClicked
        this.dispose();
        new LoginPage();
    }//GEN-LAST:event_btnLogoutMouseClicked

        private void btnEditCarListingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditCarListingMouseClicked
            String carName = txtCarName.getText().trim();
            String carType = txtCarType.getText().trim();
            String carYear = txtCarYear.getText().trim();
            String status = txtStatus.getText().trim();
            String dailyRate = txtDailyRate.getText().trim();
            String vin = txtVin.getText().trim();

            // Validation checks
            if (carName.isEmpty() || carType.isEmpty() || carYear.isEmpty() || status.isEmpty() || dailyRate.isEmpty() || vin.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please fill in all fields.", "Input Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (!vin.matches("\\d+")) {
                JOptionPane.showMessageDialog(this, "VIN should only contain numbers.", "Input Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            String filePath = "src/storage/cars.csv"; // Path to the CSV file
            File inputFile = new File(filePath);
            File tempFile = new File(inputFile.getAbsolutePath() + ".tmp"); // Temporary file

            BufferedReader reader = null;
            BufferedWriter writer = null;

            try {
                reader = new BufferedReader(new FileReader(inputFile));
                writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(tempFile), "UTF-8"));

                String line;
                boolean carFound = false; // Flag to check if car is found

                // Read each line from the original file
                while ((line = reader.readLine()) != null) {
                    String[] cars = line.split(",");
                    String existingVin = cars[5]; // Adjust index based on your CSV structure

                    // Check if the current line's VIN matches the one to edit and belongs to the logged-in user
                    if (existingVin.equals(vin) && cars[0].equals(user.getUserId())) { // Assuming the first column is the user ID
                        carFound = true; // Car found

                        // Update the car details
                        cars[1] = carName;
                        cars[2] = carYear;
                        cars[3] = carType;
                        cars[4] = status;
                        cars[5] = dailyRate;

                        // Write the updated line to the temp file
                        writer.write(String.join(",", cars));
                        writer.newLine();
                    } else {
                        // Write the line to the temp file if VIN does not match
                        writer.write(line);
                        writer.newLine();
                    }
                }

                // Make sure to flush and close the writer before replacing files
                writer.flush();
                writer.close(); // Close the writer first
                reader.close(); // Then close the reader

                // Check if car was found and updated
                if (carFound) {
                    // Replace the original file with the updated file
                    if (!inputFile.delete() || !tempFile.renameTo(inputFile)) {
                        JOptionPane.showMessageDialog(this, "Error updating file. Please try again.", "File Update Error", JOptionPane.ERROR_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "Car data updated successfully.", "Update Successful", JOptionPane.INFORMATION_MESSAGE);
                        // Optionally refresh your table or UI here
                        // populateTable(tblCarListing, "src/storage/carDetails.csv");
                        txtCarName.setText("");
                        txtCarType.setText("");
                        txtCarYear.setText("");
                        txtStatus.setText("");
                        txtDailyRate.setText("");
                        txtVin.setText("");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "VIN not found.", "Update Failed", JOptionPane.ERROR_MESSAGE);
                }

            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Error reading/writing to file: " + e.getMessage(), "File Error", JOptionPane.ERROR_MESSAGE);
            } finally {
                // Ensure resources are closed in case of an exception
                try {
                    if (reader != null) {
                        reader.close();
                    }
                    if (writer != null) {
                        writer.close();
                    }
                } catch (IOException e) {
                    // Handle exception during resource closing
                    e.printStackTrace();
                }
            }
        }//GEN-LAST:event_btnEditCarListingMouseClicked

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageFleet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageFleet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageFleet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageFleet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageFleet(null).setVisible(true);
            }
        });


        
    }
// open car owner dashbaord when clickedd
    private void ownerDashboardMouseClicked(java.awt.event.MouseEvent evt) throws UnsupportedLookAndFeelException {                                     
        this.dispose();
        new OwnerDashboard(user);
    } 


    // open fleet management page when clicked
    private void manageFleetMouseClicked(java.awt.event.MouseEvent evt) throws UnsupportedLookAndFeelException {                                     
        this.dispose();
        new ManageFleet(user);
    } 
    // bookedCarsMouseClicked
    private void bookedCarsMouseClicked(java.awt.event.MouseEvent evt) throws UnsupportedLookAndFeelException {                                     
        this.dispose();
        new bookedcars(user);
    } 
    // addCarMouseClicked
    private void addCarMouseClicked(java.awt.event.MouseEvent evt) throws UnsupportedLookAndFeelException {                                     
        this.dispose();
        new AddCar(user);
    } 
    // logOutMouseClicked
    private void logOutMouseClicked(java.awt.event.MouseEvent evt) throws UnsupportedLookAndFeelException {                                     
        this.dispose();
        new LoginPage();
    } 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteCarListing;
    private javax.swing.JButton btnEditCarListing;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnPrintCarListing;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBooking;
    private javax.swing.JLabel lblCarID;
    private javax.swing.JLabel lblCarlisting;
    private javax.swing.JLabel lblCarmake;
    private javax.swing.JLabel lblDailyrate;
    private javax.swing.JLabel lblDashboard;
    private javax.swing.JLabel lblRenterID;
    private javax.swing.JLabel lblUsermanagement;
    private javax.swing.JTable tblCarListing;
    private javax.swing.JTextField txtCarName;
    private javax.swing.JTextField txtCarType;
    private javax.swing.JTextField txtCarYear;
    private javax.swing.JTextField txtDailyRate;
    private javax.swing.JTextField txtStatus;
    private javax.swing.JTextField txtVin;
    private javax.swing.JTextField txtVinDel;
    // End of variables declaration//GEN-END:variables
}
